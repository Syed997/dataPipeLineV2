version: "3.8"

services:
  kafka:
    image: bitnami/kafka:3.8
    container_name: kafka
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=INSIDE://:9092,OUTSIDE://:9094,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=INSIDE://kafka:9092,OUTSIDE://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INSIDE
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER   # ðŸ‘ˆ required!
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - ALLOW_PLAINTEXT_LISTENER=yes
    ports:
      - "9092:9092"
      - "9094:9094"
    networks:
      - demo
      # - signoz-net

  producer:
    build:
      context: ./producer
    container_name: flask-producer
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - TOPIC_PREFIX=demo-
    depends_on:
      - kafka
    ports:
      - "5000:5000"
    networks:
      - demo

  spark:
    build:
      context: ./spark
    container_name: spark-consumer
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - TOPIC_PATTERN=demo-.*
      - API_PORT=5001
      - CLICKHOUSE_HOST=clickhouse
      - CLICKHOUSE_PORT=9000
      - CLICKHOUSE_DB=kafka_logs
    depends_on:
      - kafka
      - clickhouse
    ports:
      - "5001:5001"
      - "4040:4040"
    networks:
      - demo

  clickhouse:
    image: clickhouse/clickhouse-server:23.8
    container_name: clickhouse
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - clickhouse_data:/var/lib/clickhouse
    networks:
      - demo

networks:
  demo:
    driver: bridge
  # signoz-net:
  #   external: true

volumes:
  clickhouse_data:
